apply plugin: 'distribution'
apply plugin: 'java-library-distribution'
apply plugin: 'os-package'
apply plugin: 'net.researchgate.release'
apply plugin: 'sonar-runner'

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

def permanentPackageName = project.name
def group = 'thomsonreuters-1p'
def rpmRelease = 1
def snapshot = true
if (snapshot) { rpmRelease = 'SNAPSHOT' }

configurations.all {
	resolutionStrategy.cacheDynamicVersionsFor 1, 'hours'     
	resolutionStrategy.cacheChangingModulesFor 1, 'hours' 
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

test {
  //enable to see logging during gradle build
  //testLogging.showStandardStreams = true
  testLogging {
        events "passed", "skipped", "failed"
  }
}

repositories {
   mavenCentral()
   jcenter()
    maven {
      url "http://repo.1p.thomsonreuters.com/nexus/content/repositories/thirdparty/"
    }
    maven {
      url "http://repo.1p.thomsonreuters.com/nexus/content/repositories/snapshots/"
    }
    maven {
      url "http://repo.1p.thomsonreuters.com/nexus/content/repositories/releases/"
    }
}

eclipse {
    classpath {
        downloadSources = true
    }
}

idea {
    module {
        jdkName = '1.8'
        downloadSources = true
    }
}

dependencies {
  
  compile group: 'com.thomsonreuters', name: '1p-service-lib', version: "${servicelib_version}"
  compile group: 'com.thomsonreuters', name: '1p-service-swagger', version: "${servicelib_version}"
    
  testCompile group:  'junit', name: 'junit-dep', version: '4.11'
  // Jersey test framework
  testCompile 'com.sun.jersey.jersey-test-framework:jersey-test-framework-core:1.11'
  testCompile 'com.sun.jersey.jersey-test-framework:jersey-test-framework-external:1.11'
}

//eiddo repo is the same as project name by default but you can change it
def eiddoRepo = rootProject.name

ospackage {
  packageName = permanentPackageName
  release = rpmRelease
  arch = NOARCH
  os = LINUX
  from(file('root/etc/reuters/karyon')) {
    into('/etc/reuters')
    user 'root'
    permissionGroup 'root'
  }


  from("build/install/"+ permanentPackageName) {
    into('/opt/reuters/apps/karyon')
    user 'karyon'
    permissionGroup 'karyon'

  }
}

buildRpm.dependsOn installDist

sonarRunner {
  sonarProperties {
    property "sonar.host.url", "http://sonar.oneplatform.build"
    property "sonar.jdbc.url", "jdbc:mysql://sonar.c35w2xq4gxyh.us-west-2.rds.amazonaws.com:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true"
    property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
    property "sonar.jdbc.username", "$System.env.sonarUsername"
    property "sonar.jdbc.password", "$System.env.sonarPassword"
  }
}