apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'distribution'
apply plugin: 'java-library-distribution'
apply plugin: 'os-package'

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

def chosenEnv
if ( System.getenv("POC_ENVIRONMENT") ) { chosenEnv = System.getenv("POC_ENVIRONMENT") } else { chosenEnv = "integration" }

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.2.0'
    }
}

repositories {
   mavenCentral()
   jcenter()
    maven {
      url "http://repo.1p.thomsonreuters.com/nexus/content/repositories/thirdparty/"
    }
    maven {
      url "http://repo.1p.thomsonreuters.com/nexus/content/repositories/snapshots/"
    }
    maven {
      url "http://repo.1p.thomsonreuters.com/nexus/content/repositories/releases/"
    }
}

eclipse {
    classpath {
        downloadSources = true
    }
}

dependencies {
  compile (group: 'com.thomsonreuters', name: '1p-service-lib', version: '0.5.12+') {
    exclude group: 'javax.servlet'
  }
}

import org.apache.tools.ant.filters.ReplaceTokens
distributions {
  main{
		baseName = '1p-service'
		 contents {
      from ( 'scripts' ) {
          fileMode = 0755
          filter(ReplaceTokens, tokens: [ 'PROJECT_NAME': baseName, 'VERSION': version])
      }
    }
  }
}
ospackage {
  version = '0.0.1-SNAPSHOT'
  requires('oracle-java8-installer')
  postInstall("echo 'export JAVA_OPTS=\"-DdisableEmbeddedCassandra=true -Deiddo.repo.name=1p-service -Deiddo.repo.dir=./conf -Deureka.environment=${chosenEnv} -Darchaius.deployment.environment=${chosenEnv}\"' >> /opt/"+ name +"-"+ version +"/setenv.sh")
  postInstall("echo 'JAVA_HOME=/usr/lib/jvm/java-8-oracle'  >> /opt/"+ name +"-"+ version +"/setenv.sh")

  from( zipTree("build/distributions/"+ name +"-"+ version +".zip") ) {
    into('/opt')
  }
  postInstall("rm -f /etc/init.d/jetty8")
  postInstall("mkdir -p /opt/"+ name +"-"+ version +"/log && chown ubuntu:ubuntu /opt/"+ name +"-"+ version +"/log")
  postInstall("mkdir -p /opt/"+ name +"-"+ version +"/conf && chown ubuntu:ubuntu /opt/"+ name +"-"+ version +"/conf")
  link("/etc/init/"+ name +".conf", "/opt/"+ name +"-"+ version +"/daemon.sh")
}
